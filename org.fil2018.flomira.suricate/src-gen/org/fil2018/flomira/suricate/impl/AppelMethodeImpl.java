/**
 * generated by Xtext 2.12.0
 */
package org.fil2018.flomira.suricate.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.fil2018.flomira.suricate.AppelMethode;
import org.fil2018.flomira.suricate.Ligne;
import org.fil2018.flomira.suricate.SuricatePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Appel Methode</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.fil2018.flomira.suricate.impl.AppelMethodeImpl#getIfBody <em>If Body</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AppelMethodeImpl extends InstructionImpl implements AppelMethode
{
  /**
   * The cached value of the '{@link #getIfBody() <em>If Body</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIfBody()
   * @generated
   * @ordered
   */
  protected EList<Ligne> ifBody;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AppelMethodeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SuricatePackage.Literals.APPEL_METHODE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Ligne> getIfBody()
  {
    if (ifBody == null)
    {
      ifBody = new EObjectContainmentEList<Ligne>(Ligne.class, this, SuricatePackage.APPEL_METHODE__IF_BODY);
    }
    return ifBody;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SuricatePackage.APPEL_METHODE__IF_BODY:
        return ((InternalEList<?>)getIfBody()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SuricatePackage.APPEL_METHODE__IF_BODY:
        return getIfBody();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SuricatePackage.APPEL_METHODE__IF_BODY:
        getIfBody().clear();
        getIfBody().addAll((Collection<? extends Ligne>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SuricatePackage.APPEL_METHODE__IF_BODY:
        getIfBody().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SuricatePackage.APPEL_METHODE__IF_BODY:
        return ifBody != null && !ifBody.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //AppelMethodeImpl
