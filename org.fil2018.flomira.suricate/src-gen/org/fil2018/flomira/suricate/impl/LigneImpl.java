/**
 * generated by Xtext 2.12.0
 */
package org.fil2018.flomira.suricate.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.fil2018.flomira.suricate.Affectation;
import org.fil2018.flomira.suricate.Instruction;
import org.fil2018.flomira.suricate.Ligne;
import org.fil2018.flomira.suricate.SuricatePackage;
import org.fil2018.flomira.suricate.Variable;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Ligne</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.fil2018.flomira.suricate.impl.LigneImpl#getInstr <em>Instr</em>}</li>
 *   <li>{@link org.fil2018.flomira.suricate.impl.LigneImpl#getVar <em>Var</em>}</li>
 *   <li>{@link org.fil2018.flomira.suricate.impl.LigneImpl#getAff <em>Aff</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LigneImpl extends MinimalEObjectImpl.Container implements Ligne
{
  /**
   * The cached value of the '{@link #getInstr() <em>Instr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInstr()
   * @generated
   * @ordered
   */
  protected Instruction instr;

  /**
   * The cached value of the '{@link #getVar() <em>Var</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVar()
   * @generated
   * @ordered
   */
  protected Variable var;

  /**
   * The cached value of the '{@link #getAff() <em>Aff</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAff()
   * @generated
   * @ordered
   */
  protected Affectation aff;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LigneImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SuricatePackage.Literals.LIGNE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Instruction getInstr()
  {
    return instr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInstr(Instruction newInstr, NotificationChain msgs)
  {
    Instruction oldInstr = instr;
    instr = newInstr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SuricatePackage.LIGNE__INSTR, oldInstr, newInstr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInstr(Instruction newInstr)
  {
    if (newInstr != instr)
    {
      NotificationChain msgs = null;
      if (instr != null)
        msgs = ((InternalEObject)instr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SuricatePackage.LIGNE__INSTR, null, msgs);
      if (newInstr != null)
        msgs = ((InternalEObject)newInstr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SuricatePackage.LIGNE__INSTR, null, msgs);
      msgs = basicSetInstr(newInstr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SuricatePackage.LIGNE__INSTR, newInstr, newInstr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Variable getVar()
  {
    return var;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVar(Variable newVar, NotificationChain msgs)
  {
    Variable oldVar = var;
    var = newVar;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SuricatePackage.LIGNE__VAR, oldVar, newVar);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVar(Variable newVar)
  {
    if (newVar != var)
    {
      NotificationChain msgs = null;
      if (var != null)
        msgs = ((InternalEObject)var).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SuricatePackage.LIGNE__VAR, null, msgs);
      if (newVar != null)
        msgs = ((InternalEObject)newVar).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SuricatePackage.LIGNE__VAR, null, msgs);
      msgs = basicSetVar(newVar, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SuricatePackage.LIGNE__VAR, newVar, newVar));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Affectation getAff()
  {
    return aff;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAff(Affectation newAff, NotificationChain msgs)
  {
    Affectation oldAff = aff;
    aff = newAff;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SuricatePackage.LIGNE__AFF, oldAff, newAff);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAff(Affectation newAff)
  {
    if (newAff != aff)
    {
      NotificationChain msgs = null;
      if (aff != null)
        msgs = ((InternalEObject)aff).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SuricatePackage.LIGNE__AFF, null, msgs);
      if (newAff != null)
        msgs = ((InternalEObject)newAff).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SuricatePackage.LIGNE__AFF, null, msgs);
      msgs = basicSetAff(newAff, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SuricatePackage.LIGNE__AFF, newAff, newAff));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SuricatePackage.LIGNE__INSTR:
        return basicSetInstr(null, msgs);
      case SuricatePackage.LIGNE__VAR:
        return basicSetVar(null, msgs);
      case SuricatePackage.LIGNE__AFF:
        return basicSetAff(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SuricatePackage.LIGNE__INSTR:
        return getInstr();
      case SuricatePackage.LIGNE__VAR:
        return getVar();
      case SuricatePackage.LIGNE__AFF:
        return getAff();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SuricatePackage.LIGNE__INSTR:
        setInstr((Instruction)newValue);
        return;
      case SuricatePackage.LIGNE__VAR:
        setVar((Variable)newValue);
        return;
      case SuricatePackage.LIGNE__AFF:
        setAff((Affectation)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SuricatePackage.LIGNE__INSTR:
        setInstr((Instruction)null);
        return;
      case SuricatePackage.LIGNE__VAR:
        setVar((Variable)null);
        return;
      case SuricatePackage.LIGNE__AFF:
        setAff((Affectation)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SuricatePackage.LIGNE__INSTR:
        return instr != null;
      case SuricatePackage.LIGNE__VAR:
        return var != null;
      case SuricatePackage.LIGNE__AFF:
        return aff != null;
    }
    return super.eIsSet(featureID);
  }

} //LigneImpl
