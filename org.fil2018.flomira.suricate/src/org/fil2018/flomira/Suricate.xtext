grammar org.fil2018.flomira.Suricate with org.eclipse.xtext.common.Terminals

generate suricate "http://www.fil2018.org/flomira/Suricate"

Programme:
	(elements+=Ligne)*;
	
Ligne:
	instr=Instruction  ("->" var=Variable)?
	| aff=Affectation
;

Affectation:
	{Affectation} valeur=TypePrimaire ("->" variable=Variable)?
;

Instruction:
	AppelMethode | Boucle
;

Boucle:
	IfBoucle
;

IfBoucle:
	"If" AppelMethode "Then" "{" (ifBody+=Ligne)+ "}"
;

AppelMethode:
	AppelMethSimple | AppelMethComposite
	;

AppelMethComposite:
	name=[Variable] ("." methode+=AppelMethSimple)+
;

TypePrimaire:
	IntLiteral | StringLiteral
;
	
Variable:
	name=ID;

IntLiteral:
	INT
;

StringLiteral:
	STRING
;	
	
AppelMethSimple:
	{Methode} ID "(" ( params+=Parametre ("," params+=Parametre)* )? ")";
	
Parametre:
	AppelMethode | Variable | TypePrimaire;